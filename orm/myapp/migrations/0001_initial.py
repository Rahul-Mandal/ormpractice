# Generated by Django 5.0.4 on 2024-06-24 11:54

import datetime
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppCustomerCst',
            fields=[
                ('id_cst', models.AutoField(primary_key=True, serialize=False)),
                ('is_active_cst', models.BooleanField()),
                ('name_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('address_1_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('address_2_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('address_3_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('city_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('state_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('zip_cst', models.CharField(blank=True, max_length=10, null=True)),
                ('country_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('salesrep_cst', models.CharField(blank=True, max_length=50, null=True)),
                ('type_cst', models.CharField(blank=True, max_length=10, null=True)),
                ('is_allowed_flat_cst', models.BooleanField()),
                ('iddef_cst', models.IntegerField()),
                ('date_created_cst', models.DateTimeField()),
                ('date_suspended_cst', models.DateTimeField(blank=True, null=True)),
                ('date_first_tran_cst', models.DateTimeField(blank=True, null=True)),
                ('date_last_tran_cst', models.DateTimeField(blank=True, null=True)),
                ('is_credit_hold_cst', models.BooleanField()),
                ('old_balance_cst', models.DecimalField(decimal_places=2, max_digits=8)),
                ('balance_notify_cst', models.DecimalField(decimal_places=2, max_digits=8)),
                ('balance_statement_cst', models.DecimalField(decimal_places=2, max_digits=8)),
                ('balance_conversion_cst', models.DecimalField(decimal_places=2, max_digits=8)),
                ('balance_cst', models.DecimalField(decimal_places=2, max_digits=8)),
                ('receive_emails_cst', models.BooleanField()),
                ('contact_domain_cst', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AppTradingPartnerTrp',
            fields=[
                ('id_trp', models.IntegerField(primary_key=True, serialize=False)),
                ('tpid_trp', models.CharField(blank=True, max_length=50, null=True)),
                ('name_trp', models.CharField(max_length=50)),
                ('description_trp', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=512)),
                ('last_name', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Author1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=512)),
                ('last_name', models.CharField(max_length=512)),
            ],
        ),
        migrations.CreateModel(
            name='Colors',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('color_code', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Crawl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('my_integer', models.IntegerField()),
                ('created_ts', models.DateTimeField(default=datetime.datetime.utcnow, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=90, null=True)),
                ('Price', models.FloatField()),
                ('Digital', models.BooleanField()),
                ('image', models.ImageField(default='', upload_to='')),
                ('dep', models.CharField(blank=True, max_length=90, null=True)),
                ('salary', models.FloatField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='YoutubeVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.FileField(upload_to='youtube')),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AppCustomerTpRel',
            fields=[
                ('id_rel', models.AutoField(primary_key=True, serialize=False)),
                ('cust_vendor_rel', models.CharField(blank=True, max_length=50, null=True)),
                ('sender_id_rel', models.CharField(blank=True, max_length=50, null=True)),
                ('old_vendor_rel', models.CharField(blank=True, max_length=50, null=True)),
                ('vendor_name_rel', models.CharField(blank=True, max_length=50, null=True)),
                ('category_rel', models.CharField(blank=True, max_length=50, null=True)),
                ('idcst_rel', models.ForeignKey(db_column='idcst_rel', on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.appcustomercst')),
                ('idtrp_rel', models.ForeignKey(db_column='idtrp_rel', on_delete=django.db.models.deletion.DO_NOTHING, to='myapp.apptradingpartnertrp')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField()),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.account')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('salary', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('PUBLISHED', 'Published'), ('ON_HOLD', 'On Hold')], default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', models.BinaryField(verbose_name=models.CharField(max_length=255))),
                ('add', models.JSONField(default=dict, max_length=200)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.author')),
                ('author1', models.ManyToManyField(related_name='many', to='myapp.author')),
            ],
        ),
        migrations.CreateModel(
            name='Book1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512)),
                ('authors', models.ManyToManyField(to='myapp.author1')),
            ],
        ),
        migrations.AddField(
            model_name='author',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='authors', to='myapp.country'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('complete', models.BooleanField(blank=True, default=False, null=True)),
                ('transaction', models.CharField(blank=True, max_length=90, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.CharField(max_length=100)),
                ('about', models.TextField()),
                ('age', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
                ('Colors', models.ManyToManyField(to='myapp.colors')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PeopleAddress',
            fields=[
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('address', models.TextField()),
                ('people', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_address', to='myapp.people')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package', models.CharField(choices=[('novice', 'Novice'), ('elite', 'Elite')], default=None, max_length=10, verbose_name='plan')),
                ('level', models.PositiveIntegerField(default=1)),
                ('link', models.URLField(editable=False, null=True, unique=True, verbose_name='link')),
                ('commission', models.DecimalField(decimal_places=2, default=0.0, editable=False, max_digits=10)),
                ('is_paid', models.BooleanField(blank=True, default=True, verbose_name='account validity')),
                ('referals', models.ManyToManyField(related_name='invites', to='myapp.account')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='plan',
            field=models.ManyToManyField(blank=True, related_name='subscription', to='myapp.plan'),
        ),
        migrations.CreateModel(
            name='Order_Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.product')),
            ],
        ),
        migrations.CreateModel(
            name='Shipping_Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=90, null=True)),
                ('state', models.CharField(max_length=90, null=True)),
                ('city', models.CharField(max_length=90)),
                ('zipcode', models.CharField(max_length=90)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.order')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.product')),
            ],
        ),
    ]
